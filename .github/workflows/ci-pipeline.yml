name: Construction du projet

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PORT: 5001
  IMAGE_TAG: ${{ secrets.DOCKER_USER }}/vue-app-cicd:latest  # Tag statique pour Docker

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    name: Setup, test, and build project
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Generate PDF report
        run: |
          node generate-pdf.js --no-sandbox

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    name: Build and deploy Docker container locally
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin

      - name: Build Docker image
        run: |
          docker build . --file Dockerfile --tag ${{ env.IMAGE_TAG }}

      - name: List Docker images
        run: docker images

      - name: Remove existing container (if any)
        run: |
          docker rm -f vue-app-container || true

      - name: Deploy Docker container locally
        run: |
          docker run -d --name vue-app-container -p ${{ env.PORT }}:5001 ${{ env.IMAGE_TAG }}

      - name: Verify deployment
        run: |
          echo "Waiting for the application to start..."
          sleep 10
          echo "Checking if the application is running..."
          curl -I http://localhost:${{ env.PORT }}
        