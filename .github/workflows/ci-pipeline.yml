name: Construction du projet

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PORT: 5001
  IMAGE: ${{vars.IMAGE}}:${{github.sha}}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    name: Setup, test, and build project
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Test application
        run: npm test

      - name: Génération du rapport PDF
        run: node generate-pdf.js

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    name: Setup project, Authorize GitHub Actions to Docker Hub, and build image
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate for Docker Hub
        id: docker-auth
        env:
          D_USER: ${{secrets.DOCKER_USER}}
          D_PASS: ${{secrets.DOCKER_PASSWORD}}
          key: ${{ secrets.KEY }}

        run: |
          docker login -u $D_USER -p $D_PASS

      - name: Build the Docker image
        run: |
          TAG=${{ github.sha }}
          docker build . --file Dockerfile --tag vue-app-cicd:$TAG
      
      - name: Push Docker image to Docker Hub
        run: |
          docker push vue-app-cicd:$TAG



      - name: Deploy locally
        run: |
          echo "Starting local server"
          nohup npm start &

      - name: Verify deployment
        run: |
          echo "Checking if the application is running"
          curl -I http://localhost:$PORT
