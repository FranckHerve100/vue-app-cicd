name: Construction du projet

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PORT: 5173
  IMAGE_TAG: ${{ secrets.DOCKER_USER }}/vue-app-cicd:latest  # Tag statique pour Docker

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    name: Setup, test, and build project
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Generate PDF report
        run: |
          node generate-pdf.js --no-sandbox

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    name: Build and deploy Docker container locally using SSH
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USER }}/vue-app-cicd:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USER }}/vue-app-cicd:latest

      - name: Deploy and Verify Docker Container Locally
        run: |
          # Assurez-vous que Docker est installé et en cours d'exécution sur votre machine locale
          docker --version
      
          # Pull la dernière image depuis Docker Hub
          docker pull franckherve100/vue-app-cicd:latest
          
          # Afficher la liste des images Docker disponibles pour vérifier le pull
          echo "Liste des images Docker disponibles :"
          docker images
          
          # Arrêter et supprimer les conteneurs existants (si nécessaire)
          docker stop vue-app-cicd || true
          docker rm vue-app-cicd || true
          
          # Démarrer le nouveau conteneur
          docker run -d --name vue-app-cicd -p 5173:80 franckherve100/vue-app-cicd:latest
          
          # Vérifiez que le conteneur est en cours d'exécution
          echo "Liste des conteneurs Docker en cours d'exécution :"
          docker ps
          
          # Effectuer une vérification pour voir si l'application est accessible
          echo "Vérification de l'application en local..."
          if curl -s http://localhost:5173 | grep -q "Bienvenue"; then
            echo "L'application fonctionne correctement !"
          else
            echo "Erreur : L'application ne répond pas comme prévu."
            exit 1
          fi
        shell: bash
      