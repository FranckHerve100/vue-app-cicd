name: Construction du projet

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PORT: 5173
  IMAGE_TAG: ${{ secrets.DOCKER_USER }}/vue-app-cicd:latest  # Tag statique pour Docker

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    name: Setup, test, and build project
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Generate PDF report
        run: |
          node generate-pdf.js --no-sandbox

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    name: Build and deploy Docker container locally using SSH
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USER }}/vue-app-cicd:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USER }}/vue-app-cicd:latest

      - name: Deploy on Local Machine via SSH
        run: |
          # Créer le répertoire SSH s'il n'existe pas et afficher le contenu pour le débogage
          mkdir -p ~/.ssh
          echo "Clé privée dans GitHub Secrets" 
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/private_key  # La clé privée est stockée dans GitHub Secrets
          ls -l ~/.ssh  # Afficher les fichiers dans le répertoire ~/.ssh pour le débogage
          chmod 600 ~/.ssh/private_key  # Sécuriser la clé privée
      
          # Vérifier que le fichier de clé privée est bien créé et accessible
          cat ~/.ssh/private_key  # Afficher le contenu de la clé privée pour le débogage (attention à la confidentialité)
      
          # Ajouter l'hôte distant à known_hosts pour éviter les questions de vérification de l'hôte
          ssh-keyscan -H 192.168.1.213 >> ~/.ssh/known_hosts
      
          # Vérifier si le fichier known_hosts est bien mis à jour
          ls -l ~/.ssh/known_hosts  # Afficher les fichiers pour le débogage
      
          # Utiliser la clé privée pour se connecter via SSH et déployer avec Docker Compose
          ssh -i ~/.ssh/private_key -o StrictHostKeyChecking=no -T genif@192.168.1.213 << 'EOF'
            docker pull ${{ secrets.DOCKER_USER }}/vue-app-cicd:latest
            cd /home/genif/vue-app-cicd/
            docker-compose down
            docker-compose up --build -d
            exit
          EOF
        shell: /usr/bin/bash -e {0}
      
      

      - name: Verify deployment on local machine
        run: |
          ssh -i ~/.ssh/private_key -o StrictHostKeyChecking=no -T genif@192.168.1.213 << 'EOF'
            echo "Checking if the application is running on local machine..."
            curl -I http://localhost:5173
            exit
          EOF

